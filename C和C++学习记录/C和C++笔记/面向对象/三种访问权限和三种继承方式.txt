三种访问权限和三种继承方式
一、请分开看访问权限和继承方式，虽然用的三个词一样public，protected，private
二、访问权限
外部函数指一些通过对象，对象指针，其他类的成员函数以及全局域的函数等等的方式访问
可以将对象和外部函数理解为用户代码，以区别类和类成员。
       1.理解 对象和外部函数可用，类和类成员可用的区别
        2.public 对象和外部函数 类和类内成员可用
        3.protected 和private 类和类内成员可用
            在权限上一样，区别体现在继承方面
三、继承
      @.前提，基类private成员，无论哪种继承方式，继承在派生类中后对于派生类和成员不可用，对象和外部函数更是，但确实继承了，占用了内存
      1.public继承，在派生类中访问权限符号和基类的访问权限符号一样  
       2.protected继承，在派生类中，访问权限在父类是public在子类变成protected，原来是protected的在派生类中权限符号不变
       3.private继承，原来的符号public和protected改为派生类中的private

另外：类和类成员可以访问的，类的友元也可以；

派生类向基类的转换的使用：
1.无论什么继承方式，派生类和派生类的成员都可以使用派生类到基类的转换（但是多态性，派生类要公有继承，多态性为用户代码使用才有意义。）
2.只有公有继承，用户代码才能使用派生类向基类的转换，派生类私有继承和保护继承用户代码不能使用这转换
3.基类A，派生类B的派生类C和派生类B的派生类C的成员：
	如果派生类B公有继承A或者保护继承A，他们可以使用派生类B向A的转换
	如果派生类B私有继承A，派生类B的派生类C和派生类B的派生类C的成员，他不们可以使用派生类B向A的转换
	
继承中类的作用域
派生类作用域是嵌套在基类作用域中的，所以我们才可以象使用自己的成员一样使用基类成员。

不可重载与同名隐藏
同名隐藏因为名字检查优先于参数类型，可以使用作用域来使用同名隐藏的成员。使用作用域可以颠覆查找规则，违背同名隐藏。
考虑这样的情况：派生类继承了一个同名但是形参列表不同的函数（这说明不是虚函数，虚函数都是同名同参数列表的），
这时派生类调用同名函数，传参列表和基类一样，和派生类不一样，不会发生重载，而是因为同名成员隐藏，
发生错误，派生类有同名函数却不能用，而基类同名函数又不可见，这可以用作用域来调用。
这也就是为什么虚函数要用相同的名字和参数列表类型，不一样的话无法通过指针或引用调用派生类虚函数。
