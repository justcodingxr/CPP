//因为不能拷贝数组，所以无法以值传递使用数组参数
//因为使用数组时会转换成指针，所以为函数传递数组时，实际传递的是指向数组首元素的指针
//尽管不能以值传递大方式传递数组，单数我们可以把形参写成类似数组的形式
//int *；int [];int[10];三个等价的
//char str[][10];char (*str)[10];两个等价；char **str比较特俗，指向的是二维数组

//一维数组，实参写数组名即可，形参有限长数组，不定长数组，指针等形式
//数组作为函数形参，有三种选择方式，一、声明为指针，二、声明为不限定长度的指针，三、限定为长度的数组
//实际上数组传入函数时，实参自动转换为指向首元素的指针；三种声明形参的方式等价
//直接将数组名写入函数调用即可

//二维数组，实参大多写数组名，除了
//void f3(int n, char  **str) {
//	for (int i = 0; i < n; i++) {
//		cout << str[i] << endl;//二级指针下标访问一维数组
//		//要将实参弄成二级指针可以接受
//	}
//}
//f4因为形参是个二级指针，不是指向首元素的指针形式，实参要定义一个二级指针，
//如果传数组名，转化的是指向一维数组的一级指针，不满足
//对于其他几种形参形式，实参传二维数组名就行，f1，f2，f3

/*32.二维数组传参
2021-09-14 18:40 */
#include <iostream>
using namespace std;

void f1(int n, char str[][10]) {
	for (int i = 0; i < n; i++) {
		cout << str[i] << endl;//数组下标访问
	}
}


void f2(int n, char (*str)[10]) {
	for (int i = 0; i < n; i++) {
		cout << *str << endl;
		str++;//指向一维数组的指针后移
	}
}

void f22(int n, char (*str)[10]) {
	for (int i = 0; i < n; i++) {
		cout << str[i] << endl;//此处是指针当数组使用

	}
}

void f3(int n, char  **str) {
	for (int i = 0; i < n; i++) {
		cout << str[i] << endl;//二级指针下标访问一维数组
		//要将实参弄成二级指针可以接受
	}
}
int main() {

	char str[5][10] = {"ada", "dwd", "kdiwfgfjc", "dwihdi"};

	f1(5, str);
	cout << "=======" << endl;

	f2(5, str);
	cout << "=======" << endl;

	f22(5, str);
	cout << "=======" << endl;

	char *p[4];
	p[0] = &str[0][0];
	p[1] = str[1];
	p[2] = str[2];
	p[3] = str[3];
	f3(5, p);
	cout << "=======" << endl;
	return 0;
}


